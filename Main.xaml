<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="915,9888" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:sma="clr-namespace:System.Management.Automation;assembly=System.Management.Automation" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="45">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Extract Data" sap:VirtualizedContainerService.HintSize="925,9823" sap2010:WorkflowViewState.IdRef="Sequence_13">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="arr_files" />
      <Variable x:TypeArguments="x:String" Name="str_UnprocessedImagesFilePath" />
      <Variable x:TypeArguments="x:String" Name="str_ProcessedImagesFilePath" />
      <Variable x:TypeArguments="x:String" Name="str_ExtractedDataFilePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="883,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_UnprocessedImagesFilePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\Users\kim77\Pictures\Randy UiPath\UnProcessed Images</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_ProcessedImagesFilePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\Users\kim77\Pictures\Randy UiPath\Processed Images</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_ExtractedDataFilePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\Users\kim77\Pictures\Randy UiPath\Extracted Data.xlsx</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <Assign DisplayName="Get files in the Unprocessed Folder" sap:VirtualizedContainerService.HintSize="883,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[arr_files]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(str_UnprocessedImagesFilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[arr_files.Length = 0]" sap:VirtualizedContainerService.HintSize="883,9431" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;No Files in Unprocessed Images Folder&quot;]" />
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="504,9273" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd1:DataTable" Name="dt_extractedData" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DataTable="[dt_extractedData]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="462,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Total_x0020_Included_x0020_Beats&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Average_x0020_RR&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Median_x0020_RR&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SDRR&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SDARR&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;CVRR&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Average_x0020_Rate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SD_x0020_Rate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SDSD&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;RMSSD&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;pRR50&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020_ms_x0020_total&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020_ms_x0020_VLF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020__x0025__x0020_VLF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020_ms_x0020_LF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020__x0025__x0020_LF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020_nu_x0020_LF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020_ms_x0020_HF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020__x0025__x0020_HF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020_nu_x0020_HF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Power_x0020__x0025__x0020_LF_x002F_HF&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SD1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SD2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="462,8312" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[arr_files]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,8188" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="str_averageRR" />
                    <Variable x:TypeArguments="x:String" Name="str_medianRR" />
                    <Variable x:TypeArguments="ui:Image" Name="im_dataImage" />
                    <Variable x:TypeArguments="x:String" Name="str_SDRR" />
                    <Variable x:TypeArguments="x:String" Name="str_SDARR" />
                    <Variable x:TypeArguments="x:String" Name="str_CVRR" />
                    <Variable x:TypeArguments="x:String" Name="str_averageRate" />
                    <Variable x:TypeArguments="x:String" Name="str_SDRate" />
                    <Variable x:TypeArguments="x:String" Name="str_SDSD" />
                    <Variable x:TypeArguments="x:String" Name="str_RMSSD" />
                    <Variable x:TypeArguments="x:String" Name="str_pRR50" />
                    <Variable x:TypeArguments="x:String" Name="str_totalIncludedBeats" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerMsTotal" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerMsVLF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerPercentVLF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerMsLF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerPercentLF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerNuLF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerMsHF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerPercentHF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerNuHF" />
                    <Variable x:TypeArguments="x:String" Name="str_PowerPercentLFHF" />
                    <Variable x:TypeArguments="x:String" Name="str_SD1" />
                    <Variable x:TypeArguments="x:String" Name="str_SD2" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_23" Text="[&quot;STARTING TO PROCESS IMAGE: &quot; + file.ToString]" />
                  <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" CommandText="[file.ToString]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_1" />
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'custom  D2DImageControl'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c75b1092-ee28-44af-9262-4a31271dfe0b" InformativeScreenshot="67c6474122c60152b4059fdf45b74780" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='second image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DelayBetweenKeys="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="up" KeyModifiers="Win" SpecialKey="True">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="f71b37d1-9f15-4473-96b7-e64fcad19f01">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DelayBetweenKeys="100" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="up" KeyModifiers="Win" SpecialKey="True">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="f71b37d1-9f15-4473-96b7-e64fcad19f01">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Total Included Beats" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_11">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_17" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="4cb0843666f449a8162db60b0443dcfb" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="173, 90, 99, 24" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_totalIncludedBeats]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="after Total included beats" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Average RR" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_14">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_43" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="c4d20833ca9fd56edd535f79453514f9" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="111, 226, 198, 24" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_averageRR]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="after average rr" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Median RR" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_15">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_44" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="a5856912bac8099c273d30d34f9be693" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="111, 248, 201, 23" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_medianRR]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="after median rr" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="SDRR" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_16">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_45" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="cc47e74acedf85018592a5f6988981cb" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="162, 270, 143, 23" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_SDRR]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="after sdrr" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="SDARR" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_17">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_23" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="42e265853da2405c73868ce828fa1679" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="135, 289, 150, 27" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_SDARR]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="after sdarr" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="CVRR" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_18">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_24" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="f461a87f0efe810bf4b51f98fb3c6c96" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="149, 311, 141, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_CVRR]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="after cvrr" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Average Rate" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_19">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_25" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="619cff2358509d39687d464206196a5a" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="147, 335, 147, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_averageRate]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="after average rate" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="SD Rate" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_20">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_26" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="7e0d68e74b2f375272b99cb2e4194378" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="145, 356, 142, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_SDRate]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="after sd rate" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="SDSD" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_21">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_27" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="3e6c72bd69c75a7eb52b42eff57a762c" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="144, 379, 147, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_SDSD]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="after sdsd" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="RMSSD" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_22">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_28" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="f8a5cd0b44077432c4c1c35ddf7e11db" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="149, 399, 146, 27" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_RMSSD]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="after rmssd" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="pRR50" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_23">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_14" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="bd3791a15dfdc6d7d041cc144f48be3a" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="142, 424, 144, 24" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_pRR50]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="after prr50" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power ms total" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_24">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_29" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="bd45502e5f2c22093414cae3443dd455" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="454, 158, 80, 24" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerMsTotal]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="after power ms total" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power ms VLF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_25">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_30" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="3950113c55921d62a4b9404faad0dd8b" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="456, 192, 74, 27" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerMsVLF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="after power ms vlf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power % VLF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_26">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_31" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="186858f7c85826bf3db1ea854d2ae187" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="548, 193, 80, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerPercentVLF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="after power % vlf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power ms LF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_27">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_32" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="f919794587ec9d0b749f28b05808c5e0" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="453, 229, 82, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerMsLF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="after power ms lf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power % LF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_28">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_33" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="cab69e1715314fde3da14ff3cd17d19c" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="541, 228, 78, 28" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerPercentLF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="after power % lf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power nu LF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_29">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_34" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="776d71dfadc84017f922f40fd9c508ce" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="625, 228, 80, 28" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerNuLF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="after power nu lf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power ms HF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_30">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_35" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="c2cd4dc07e515be847cc9b80a3a841ec" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="453, 264, 73, 28" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerMsHF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="after power ms hf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power % HF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_31">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_36" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="2be4b22076ad7922ee0159cf93b1ea8b" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="540, 264, 75, 29" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerPercentHF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="after power % hf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power nu HF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_32">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_37" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="596448819cb74ce43f1aa769c03f2d46" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="620, 264, 82, 29" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerNuHF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="after power nu hf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Power % LF/HF" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_33">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_38" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="803718b19587d192b1da3f337af09a88" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="537, 301, 78, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_PowerPercentLFHF]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="after power  %  lf/hf" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="SD1" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_34">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_39" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="7d0a6c78c857ed60f380cf437748e11a" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="449, 404, 126, 25" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_SD1]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_22" Text="after sd1" />
                  <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="SD2" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_35">
                    <ui:GetOCRText.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument>
                        <ui:GoogleOCR DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789ms%. BPMHz-,Block:" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_40" Image="[Image]" Scale="3" />
                      </ActivityFunc>
                    </ui:GetOCRText.OCREngine>
                    <ui:GetOCRText.Target>
                      <ui:Target Element="{x:Null}" Id="6f933be3-1353-492d-984a-acc0ea5955fc" InformativeScreenshot="b77906f52372cc7dd2079be63fe17861" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;uia automationid='D2DImageControl' role='custom' /&gt;">
                        <ui:Target.ClippingRegion>
                          <ui:Region Rectangle="443, 426, 124, 26" />
                        </ui:Target.ClippingRegion>
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetOCRText.Target>
                    <ui:GetOCRText.Text>
                      <OutArgument x:TypeArguments="x:String">[str_SD2]</OutArgument>
                    </ui:GetOCRText.Text>
                  </ui:GetOCRText>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_24" Text="after sd2" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{str_totalIncludedBeats, str_averageRR.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;), str_medianRR.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;), str_SDRR.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;), str_SDARR.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;), str_CVRR, str_averageRate.Replace(&quot;BPM&quot;,&quot;&quot;), str_SDRate.Replace(&quot;BPM&quot;,&quot;&quot;), str_SDSD.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;), str_RMSSD.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;), str_pRR50.Replace(&quot;%&quot;,&quot;&quot;), str_PowerMsTotal, str_PowerMsVLF, str_PowerPercentVLF, str_PowerMsLF, str_PowerPercentLF, str_PowerNuLF, str_PowerMsHF, str_PowerPercentHF, str_PowerNuHF, str_PowerPercentLFHF, str_SD1.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;), str_SD2.Replace(&quot;m&quot;,&quot;&quot;).Replace(&quot;s&quot;,&quot;&quot;)}]" DataTable="[dt_extractedData]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                  <ui:CloseApplication DisplayName="Close Application 'Windows.UI.Core.CoreWin...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                    <ui:CloseApplication.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a8b5500c-add6-4812-aa9b-f15aade52327" InformativeScreenshot="13778f9bfa6b152c55362431b93e7461" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' omit:title='first image.png ‎- Photos' /&gt;&lt;wnd cls='Windows.UI.Core.CoreWindow' title='Photos' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:CloseApplication.Target>
                  </ui:CloseApplication>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:AppendRange DataTable="[dt_extractedData]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="462,115" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Sheet1" WorkbookPath="[str_ExtractedDataFilePath]" />
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="462,61" sap2010:WorkflowViewState.IdRef="WriteLine_25" Text="FINISHED APPENDING TO EXCEL FILE" />
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="462,373" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[arr_files]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="426,249" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MoveFile ContinueOnError="{x:Null}" Destination="[str_ProcessedImagesFilePath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[file.ToString]" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="462,61" sap2010:WorkflowViewState.IdRef="WriteLine_26" Text="FINISHED MOVING IMAGES" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>